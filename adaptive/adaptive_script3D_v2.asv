% adaptive script
% given an image with spots and and an image of the same size of masks, it
% computes thresholds local to each ROI in the mask and detects spots in
% each mask. 
% (Spots outside of masks are tossed).

% MAKE SURE THAT THE FOLLOWING FOLDERS ARE ON THE PATH:
% AIRLOCALIZE/subfunctions
% AIRLOCALIZE/subfunctions/iniconfig

%% files paths for:
% - the data to be localized (imgName)
% - the masks used to generate locally relevant tresholds (maskName)
imgName = '/Users/lionnt01/Documents/junk/3D_stack_example.tif';
maskName = '/Users/lionnt01/Documents/junk/3D_stack_example_mask_lbl.tif';


imgName = ['/Users/lionnt01/Documents/data/Nestor_for_Tim/AIRLOCALIZE_test/z_stacks_channel1/',...
    '02112025_Cen-ZF_select_HCT116_NT-GFP_Cen7-ZF1g_1_MMStack_Pos1.ome.tif - C=0-1.tif'];
maskName = ['/Users/lionnt01/Documents/data/Nestor_for_Tim/AIRLOCALIZE_test/nuclei_masks/',...
    'C1-02112025_Cen-ZF_select_HCT116_NT-GFP_Cen7-ZF1g_1_MMStack_Pos1_MIP_cp_masks.tif'];
%% settings
% key parameter: size of the psf in pixel units 
% should be scalar for 2D image data / should be 2D for 3D z-stacks ([sigma_xy, sigma_z])
psfSigma = [1.3,2];
psfSigma = [2.3,3];

% key parameter: factor that will be multiplied to the std of the mask
% (recommended: 6)
threshFactor = 12;

% options
% if = 1, eliminates spots in the background region; set to 0 to keep (default: 1)
eliminateBackgroundSpots = 1;

% pixel value that marks the backgorund spots. If set to NaN, the region
% with minimal pixel value will be eliminated (default: 0)
backgroundID = 0;

% size of the pixel padding around each mask in the cropped image (default:
% 0)
paddingSize = 0;

% setup the data and parameters objects
alData1m = airLocalizeData();
params1m = airLocalizeParams();
params1m.reset();
params1m.threshUnits = 'adaptive';
params1m.threshLevel = 12;
params1m.psfSigma = psfSigma;

img = timtiffread(imgName);
mask = timtiffread(maskName);
%%
start0 = tic;
smooth = smooth_image_and_subtract_background10(img,params1m,'mask',mask);
t = toc(start0)
%%
save_as_tiff(smooth,'/Users/lionnt01/Documents/junk/testSmooth.tif');

%% 
start2 = tic;
smooth = smooth_image_and_subtract_background10(img,params1m);
t = toc(start2)

%%


%%
mask2 = repmat(mask,1,1,33);
mm = mask2 ==70;
lm = find(mm);
I0 = zeros(size(mask2));
t1 = tic;
for i=1:50
    I0 = img(mm);
end
toc(t1)
%%
t1 = tic;
for i=1:50
    I0 = img(lm);
end
toc(t1)



